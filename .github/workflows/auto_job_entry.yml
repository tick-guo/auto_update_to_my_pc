name: 自动更新文件到PC

on:
  schedule:
    #   min  hour day month week
    #  小时加8为中国
    # 每天中国时间 21,22,23点运行， 减去8为UTC时间  13,14，15
    - cron: '5 13,14,15 * * *'

  push:
    branches:
      - main

  workflow_dispatch:
  # Inputs the workflow accepts.

permissions:
  contents: read

jobs:
  build:
    #runs-on: ubuntu-latest
    runs-on: ubuntu-24.04
    timeout-minutes: 20
    environment: push_to_pc

    steps:
      - name: 检测触发事件
        run: |
          echo 触发事件:$GITHUB_EVENT_NAME

      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          # Repository name with owner. For example, actions/checkout
          repository: ${{ github.repository }}

      # 不好使， 没法支持ipv6 ?!
      #- name: Set up WARP
      #  uses: fscarmen/warp-on-actions@v1.3
      #  with:
      #    stack: dual        # Optional. Support [ ipv4, ipv6, dual ]. Default is dual.
      #    mode: wireguard    # Optional. Support [ wireguard, client ]. Default is wireguard.

      - name: Cache
        uses: actions/cache@v4.2.0
        with:
          # A list of files, directories, and wildcard patterns to cache and restore
          path: 'action-cache'
          # An explicit key for restoring and saving the cache
          key: ${{ runner.os }}-action-cache
          # Run the post step to save the cache even if another step before fails
          #save-always: # optional, default is false

          
      - name: run_shell_entry
        env: # Or as an environment variable
          # aliyun server
          #super_secret: ${{ secrets.RSA_PRIVATE_KEY_ALI }}
          RSYNC_KEY: ${{ secrets.RSYNC_KEY }}
          #env_ip: ${{ secrets.ENV_IP_ALI }}
          #env_user: ${{ secrets.ENV_USER_ALI }}
          #env_yml: "can see in bash"
          #ZEROTIER
          NETWORK_ID: ${{ secrets.NETWORK_ID }}
          ZEROTIER_API_SECRET: ${{ secrets.ZEROTIER_API_SECRET }}
          ZEROTIER_IDENTITY_PUBLIC: ${{ secrets.ZEROTIER_IDENTITY_PUBLIC }}
          ZEROTIER_IDENTITY_SECRET: ${{ secrets.ZEROTIER_IDENTITY_SECRET }}
          #notepad
          #PC_USER: ${{ secrets.PC_USER }}
          PC_IP: '192.168.168.2'
          #PC_KEY: ${{ secrets.PC_KEY }}
        run: |
          echo "--------------start"
          bash ./run_shell_entry.sh
          echo "--------------end, ret=$?"
